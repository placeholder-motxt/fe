name: Build and Deploy Docker Image

on:
  workflow_run:
    workflows: [Update Version]
    types: [completed]
    branches:
      - main
      - staging
      - dev
      - 'BUG-FIX-*'

jobs:
  determine-branch:
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      stop: ${{ steps.result.outputs.stop }}
      branch: ${{ steps.result.outputs.branch }}
    steps:
      - name: Download merge info
        uses: actions/download-artifact@v4
        with:
          name: merge-metadata
          path: ./merge-data
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine branch to checkout or stop
        id: result
        run: |
          if [ ! -f "./merge-data/merge_info.env" ]; then
            echo "Error: merge_info.env not found!"
            exit 1
          fi

          source ./merge-data/merge_info.env
          if [[ "$BRANCH" == "dev" ]]; then
            echo "stop=true" >> $GITHUB_OUTPUT
          else
            echo "branch=$BRANCH" >> $GITHUB_OUTPUT
            echo "stop=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    runs-on: ubuntu-latest
    needs: determine-branch
    if: ${{ needs.determine-branch.outputs.stop == 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.determine-branch.outputs.branch }}
          fetch-tags: true

      - name: Get Git tag
        run: |
          GIT_TAG=$(git describe --tags --exact-match ${{ needs.determine-branch.outputs.branch }} || echo "")
          if [ -z "$GIT_TAG" ]; then
            echo "No tag found for this commit."
            exit 1
          fi
          echo "Git tag: $GIT_TAG"
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ env.GIT_TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: SSH and deploy image
        uses: appleboy/ssh-action@v1.0.0 # v1 has a bug
        with:
          proxy_host: ${{ secrets.SSH_PROXY_HOST }}
          proxy_port: ${{ secrets.SSH_PROXY_PORT }}
          proxy_username: ${{ secrets.SSH_PROXY_USERNAME }}
          proxy_passphrase: ${{ secrets.SSH_PROXY_PASSPHRASE }}
          proxy_key: ${{ secrets.SSH_PROXY_KEY }}
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: ./deploy ${{ github.event.repository.name }}
