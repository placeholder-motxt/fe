name: Build and Deploy Docker Image

on:
  workflow_run:
    workflows: [Update Version]
    types: [completed]
    branches: [main, staging, dev]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Determine branch to checkout
        run: |
          if [[ "${{ github.event.workflow_run.head_branch }}" == "dev" ]]; then
            echo "BRANCH=staging" >> $GITHUB_ENV
          elif [[ "${{ github.event.workflow_run.head_branch }}" == "staging" ]]; then
            echo "BRANCH=main" >> $GITHUB_ENV
          else
            echo "Invalid branch to build from"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH }}
          fetch-tags: true

      - name: Get Git tag
        run: |
          GIT_TAG=$(git describe --tags --exact-match ${{ env.BRANCH }} || echo "")
          if [ -z "$GIT_TAG" ]; then
            echo "No tag found for this commit."
            exit 1
          fi
          echo "Git tag: $GIT_TAG"
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:${{ env.GIT_TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: SSH and deploy image
        uses: appleboy/ssh-action@v1.0.0 # v1 has a bug
        with:
          proxy_host: ${{ secrets.SSH_PROXY_HOST }}
          proxy_port: ${{ secrets.SSH_PROXY_PORT }}
          proxy_username: ${{ secrets.SSH_PROXY_USERNAME }}
          proxy_passphrase: ${{ secrets.SSH_PROXY_PASSPHRASE }}
          proxy_key: ${{ secrets.SSH_PROXY_KEY }}
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: ./deploy ${{ github.event.repository.name }}
